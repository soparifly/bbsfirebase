{"version":3,"sources":["comps/Header.jsx","comps/MainNav.jsx","config/firebaseConfig.js","comps/BBsMain.jsx","comps/Footer.jsx","comps/BBsWrite.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","MainNav","exact","to","activeClassName","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","firestore","BBsMain","useState","bbsBody","setBBsBody","useEffect","collection","get","then","bbsList","forEach","Bbs","item","data","b_date","b_time","b_writer","b_subject","Footer","BBsWrite","history","b_write","b_content","setBbs","onChange","e","target","value","name","placeholder","type","onClick","saveBBS","moment","format","add","result","console","log","push","App","path","component","Write","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7d2f6bf8.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"main_header\">\n      <h1>REACT  (⸝⸝･ᴗ･⸝⸝)੭˒˒</h1>\n      <p> React &amp; firebase BBS</p>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nfunction MainNav() {\n  return (\n    <div className=\"main_navBox\">\n      <ul className=\"main_nav\">\n        <li>\n          <NavLink exact to=\"/\" activeClassName=\"active_nav\">\n            HOME\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact to=\"/Write\" activeClassName=\"active_nav\">\n            WRITE\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact to=\"/login\" activeClassName=\"active_nav\">\n            LOGIN\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact to=\"/join\" activeClassName=\"active_nav\">\n            JOIN\n          </NavLink>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nexport default MainNav;\n","import firebase from \"firebase/app\";\nimport \"firebase/database\";\nimport \"firebase/firebase-firestore\";\n\nconst firebaseConfig = {\n  apiKey: \"YOUR FIREBACE KEY\",\n  authDomain: \"helloandroid-14f73.firebaseapp.com\",\n  databaseURL: \"https://helloandroid-14f73-default-rtdb.firebaseio.com\",\n  projectId: \"helloandroid-14f73\",\n  storageBucket: \"helloandroid-14f73.appspot.com\",\n  messagingSenderId: \"827656854837\",\n  appId: \"1:827656854837:web:8f2aefa7489c336eb1c07c\",\n  measurementId: \"G-TK5Z47JPDR\",\n};\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nconst realDB = firebase.database();\n\nconst firestore = firebase.firestore();\nexport { realDB, firestore };\n","import React, { useEffect, useState } from \"react\";\nimport \"../css/MainNav.css\";\nimport { firestore } from \"../config/firebaseConfig\";\n\nfunction BBsMain() {\n  let [bbsBody, setBBsBody] = useState([]);\n\n  const firebaseFetch = () => {\n    firestore\n      .collection(\"Bbs\")\n      .get()\n      .then((bbsList) => {\n        bbsList.forEach((Bbs) => {\n          const item = Bbs.data();\n          setBBsBody([\n            ...bbsBody,\n            <tr>\n              <td>{item.b_date}</td>\n              <td>{item.b_time}</td>\n              <td>{item.b_writer}</td>\n              <td>{item.b_subject}</td>\n            </tr>,\n          ]);\n        });\n      });\n  };\n  useEffect(firebaseFetch, []);\n  return (\n    <div className=\"bbsMain_list\">\n      <table className=\"bbs_list\">\n        <thead>\n          <tr>\n            <th>DATA</th>\n            <th>TIME</th>\n            <th>WRITER</th>\n            <th>SUBJECT</th>\n          </tr>\n        </thead>\n        <tbody>{bbsBody}</tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default BBsMain;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"footer_box\">\n      <address> CopyRight &copy; kimbyulook@naver.com</address>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport { firestore } from \"../config/firebaseConfig.js\";\nimport { useState } from \"react\";\nimport moment from \"moment\";\nimport \"../css/write.css\";\n//props.history\n/**\n * react-router-dom 을 사용하여 Routiong을 구현하면\n * 메뉴에서 글쓰기를 클릭했을때 호출(Rendering)된 컴포넌트이다\n * 이때, react-router-dom 은 매개변수로 history 변수를 받는다\n * history 변수는 routing 과 관련된 변수이다\n * history.push(URL) : URL로 redirect 하라는 명령이다\n * 글쓰기를  완료하면 redirect \"/\"\n * @param {history} param0\n * @returns\n */\nfunction BBsWrite({ history }) {\n  const [Bbs, setBbs] = useState({\n    b_write: \"\",\n    b_subject: \"\",\n    b_content: \"\",\n  });\n  /*\n\tonChange Event 핸들러\n\t키보드로 입력한 데이터를 Bbs 객체에 Setting 하는 일을 수행한다\n\t*/\n  const onChange = (e) => {\n    const { value, name } = e.target;\n    setBbs({ ...Bbs, [name]: value });\n  };\n  const onClickSave = () => {\n    // const str = JSON.stringify(Bbs);\n    // alert(str);\n    const saveBBS = {\n      ...Bbs,\n      b_date: moment().format(\"YYYY[-]MM[-]DD\"),\n      b_time: moment().format(\"HH:mm:ss\"),\n    };\n    /**\n     * firestore 에 데이터 저장하기\n     * add()를 사용하여 저장하는데 only insert\n     * doc(key).set()을 병행하여 사용하면 Update Or Insert\n     */\n    firestore\n      .collection(\"Bbs\")\n      .add(saveBBS)\n      // .doc(\"\")\n      .then((result) => {\n        console.log(result);\n        history.push(\"/\");\n      });\n  };\n  return (\n    <div className=\"write_box\">\n      <div className=\"input_box\">\n        <div>\n          <input name=\"b_writer\" placeholder=\"작성자\" onChange={onChange} />\n        </div>\n        <div>\n          {/* tag code 내에 작성하는 주석문 */}\n          {/* input tag의 onChange 이벤트 핸들러\n\t\t\t\t  input box에 데이터 (문자열)을 입력하면\n\t\t\t\t  입력된 데이터 상태 (변수, 객체)에 보관하는 역할을 한다 */}\n          <input name=\"b_subject\" placeholder=\"제목\" onChange={onChange} />\n        </div>\n        <div className=\"input_content\">\n          <input\n            name=\"b_content\"\n            placeholder=\"내옹\"\n            onChange={onChange}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div className=\"btn_box\">\n        <button onClick={onClickSave}>올리기</button>\n      </div>\n    </div>\n  );\n}\n\nexport default BBsWrite;\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./comps/Header\";\nimport MainNav from \"./comps/MainNav\";\nimport BBsMain from \"./comps/BBsMain\";\nimport Footer from \"./comps/Footer\";\nimport Write from \"./comps/BBsWrite\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <MainNav />\n        <section className=\"main_section\">\n          <Route exact path=\"/\" component={BBsMain} />\n          <Route exact path=\"/Write\" component={Write} />\n        </section>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}